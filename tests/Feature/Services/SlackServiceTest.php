<?php
namespace Tests\Feature\Services;

use App\Services\CrawlerService;
use App\Services\SlackService;
use Carbon\Carbon;
use Tests\TestCase;

class SlackServiceTest extends TestCase
{
    /** @var  SlackService */
    private $slackService;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        if (empty(env('SLACK_WEBHOOK_URL'))) {
            $this->markTestSkipped('Invalid SLACK_WEBHOOK_URL');
        }
        $this->slackService = app(SlackService::class);
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function testSetClient()
    {
        $this->markTestSkipped('OK!');
        $webhook = env('SLACK_WEBHOOK_URL');
        $this->slackService->setClient($webhook, '#test', 'TestFromLaravel');

        $this->assertEquals('#test', $this->slackService->getClient()->getDefaultChannel());
        $this->assertEquals('TestFromLaravel', $this->slackService->getClient()->getDefaultUsername());
        $this->slackService->sendMessage('test message.');
    }

    public function testSendMessage()
    {
        $this->markTestSkipped('OK!');
        $this->slackService->sendMessage('test message.');
    }

    public function testSendMessageWithSpecificChannelAndUserName()
    {
        $this->markTestSkipped('OK!');
        $this->slackService->sendMessage(
            'test message.',
            [],
            '#test',
            '小雞'
        );
    }

    public function testSendMessageWithMarkdown()
    {
        $attach = [
            [
                'author_name' => 'Test',
                'author_link' =>  'https://www.youtube.com/',
                'author_icon' =>  ':chicken01:',
                'title' => self::class,
                'title_link' => 'https://tai-service.slack.com/home',
                'text' => "`Testing`  ```This\nshit ``` \n ",
                'mrkdwn_in' =>  [
                    'text',
                ],
                'image_url' => 'http://img.94201314.net/comicui/170.jpg',
                'footer' => CrawlerService::class,
                'footer_icon' => ':chicken01:',
                'ts' => Carbon::now()->timestamp,
            ]
        ];

        $this->slackService->sendMessage(
            '',
            $attach,
            '#test',
            '小雞'
        );
    }
}
