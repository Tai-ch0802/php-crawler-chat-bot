<?php
namespace Tests\Feature\Services;

use App\Services\SlackService;
use Tests\TestCase;

class SlackServiceTest extends TestCase
{
    /** @var  SlackService */
    private $slackService;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->slackService = app(SlackService::class);
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function testSetClient()
    {
        $webhook = env('SLACK_WEBHOOK_URL');
        $this->slackService->setClient($webhook, '#test', 'TestFromLaravel');

        $this->assertEquals('#test', $this->slackService->getClient()->getDefaultChannel());
        $this->assertEquals('TestFromLaravel', $this->slackService->getClient()->getDefaultUsername());
        $this->slackService->sendMessage('test message.');
    }

    public function testSendMessage()
    {
        $this->slackService->sendMessage('test message.');
    }

    public function testSendMessageWithSpecificChannelAndUserName()
    {
        $this->slackService->sendMessage(
            'test message.',
            [],
            '#test',
            '小雞'
        );
    }

    public function testSendMessageWithMarkdown()
    {
        $attach = [
            "title" => "Title",
            "pretext" => "Pretext _supports_ mrkdwn",
            "text" => "Testing *right now!*",
            "mrkdwn_in" =>  [
                "text",
                "pretext"
            ]
        ];

        $this->slackService->sendMessage(
            "test message.\n `hihi` [test](https://tai-service.slack.com/home)",
            $attach,
            '#test',
            '小雞'
        );
    }

}
